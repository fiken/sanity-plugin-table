{"version":3,"sources":["../src/TableComponent.tsx"],"names":["deepClone","obj","JSON","parse","stringify","TableComponent","props","type","level","value","markers","onChange","dialog","setDialog","updateValue","PatchEvent","from","resetValue","createTable","newValue","rows","_type","config","rowType","_key","cells","confirmRemoveTable","callback","removeTable","addRows","count","columnCount","length","i","push","Array","fill","addRowAt","index","splice","removeRow","confirmRemoveRow","confirmRemoveColumn","removeColumn","addColumns","forEach","_","j","addColumnAt","row","updateCell","e","rowIndex","cellIndex","target","textAlign","title","description","ref"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA,SAASA,SAAT,CAAsBC,GAAtB,EAAiC;AAC/B,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,GAAf,CAAX,CAAP;AACD;;AAED,IAAMI,cAA4C,GAAIC,KAAD,IAAW;AAAA;;AAAA,MACtDC,IADsD,GACZD,KADY,CACtDC,IADsD;AAAA,MAChDC,KADgD,GACZF,KADY,CAChDE,KADgD;AAAA,MACzCC,KADyC,GACZH,KADY,CACzCG,KADyC;AAAA,MAClCC,OADkC,GACZJ,KADY,CAClCI,OADkC;AAAA,MACzBC,QADyB,GACZL,KADY,CACzBK,QADyB;;AAAA,kBAElC,qBAGlB,IAHkB,CAFkC;AAAA;AAAA,MAEvDC,MAFuD;AAAA,MAE/CC,SAF+C;;AAO9D,MAAMC,WAAW,GAAIL,KAAD,IAAW;AAC7B,WAAOE,QAAQ,CAACI,oBAAWC,IAAX,CAAgB,qBAAIP,KAAJ,CAAhB,CAAD,CAAf;AACD,GAFD;;AAIA,MAAMQ,UAAU,GAAG,MAAM;AACvB,WAAON,QAAQ,CAACI,oBAAWC,IAAX,CAAgB,wBAAhB,CAAD,CAAf;AACD,GAFD;;AAIA,MAAME,WAAW,GAAG,MAAM;AACxB,QAAMC,QAAQ,GAAG;AACfC,MAAAA,IAAI,EAAE,CACJ;AACEC,QAAAA,KAAK,EAAEC,qBAAOC,OADhB;AAEEC,QAAAA,IAAI,EAAE,iBAFR;AAGEC,QAAAA,KAAK,EAAE,CAAC,EAAD,EAAK,EAAL;AAHT,OADI,EAMJ;AACEJ,QAAAA,KAAK,EAAEC,qBAAOC,OADhB;AAEEC,QAAAA,IAAI,EAAE,iBAFR;AAGEC,QAAAA,KAAK,EAAE,CAAC,EAAD,EAAK,EAAL;AAHT,OANI;AADS,KAAjB;AAcA,WAAOX,WAAW,iCAAML,KAAK,IAAI,EAAf,GAAuBU,QAAvB,EAAlB;AACD,GAhBD;;AAkBA,MAAMO,kBAAkB,GAAG,MAAM;AAC/Bb,IAAAA,SAAS,CAAC;AAAEN,MAAAA,IAAI,EAAE,OAAR;AAAiBoB,MAAAA,QAAQ,EAAEC;AAA3B,KAAD,CAAT;AACD,GAFD;;AAIA,MAAMA,WAAW,GAAG,MAAM;AACxBX,IAAAA,UAAU;AACVJ,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAHD;;AAKA,MAAMgB,OAAO,GAAG,SAAVA,OAAU,GAAuB;AAAA,QAAtBC,KAAsB,uEAAN,CAAM;;AACrC,QAAMX,QAAQ,qBAAQV,KAAR,CAAd,CADqC,CAErC;;;AACA,QAAMsB,WAAW,GAAGtB,KAAK,CAACW,IAAN,CAAW,CAAX,EAAcK,KAAd,CAAoBO,MAAxC;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAApB,EAA2BG,CAAC,EAA5B,EAAgC;AAC9B;AACAd,MAAAA,QAAQ,CAACC,IAAT,CAAcc,IAAd,CAAmB;AACjBb,QAAAA,KAAK,EAAEC,qBAAOC,OADG;AAEjBC,QAAAA,IAAI,EAAE,iBAFW;AAGjBC,QAAAA,KAAK,EAAEU,KAAK,CAACJ,WAAD,CAAL,CAAmBK,IAAnB,CAAwB,EAAxB;AAHU,OAAnB;AAKD;;AACD,WAAOtB,WAAW,CAACK,QAAD,CAAlB;AACD,GAbD;;AAeA,MAAMkB,QAAQ,GAAG,SAAXA,QAAW,GAAuB;AAAA,QAAtBC,KAAsB,uEAAN,CAAM;;AACtC,QAAMnB,QAAQ,qBAAQV,KAAR,CAAd,CADsC,CAEtC;;;AACA,QAAMsB,WAAW,GAAGtB,KAAK,CAACW,IAAN,CAAW,CAAX,EAAcK,KAAd,CAAoBO,MAAxC;AAEAb,IAAAA,QAAQ,CAACC,IAAT,CAAcmB,MAAd,CAAqBD,KAArB,EAA4B,CAA5B,EAA+B;AAC7BjB,MAAAA,KAAK,EAAEC,qBAAOC,OADe;AAE7BC,MAAAA,IAAI,EAAE,iBAFuB;AAG7BC,MAAAA,KAAK,EAAEU,KAAK,CAACJ,WAAD,CAAL,CAAmBK,IAAnB,CAAwB,EAAxB;AAHsB,KAA/B;AAMA,WAAOtB,WAAW,CAACK,QAAD,CAAlB;AACD,GAZD;;AAcA,MAAMqB,SAAS,GAAIF,KAAD,IAAmB;AACnC,QAAMnB,QAAQ,GAAGnB,SAAS,CAACS,KAAD,CAA1B;AACAU,IAAAA,QAAQ,CAACC,IAAT,CAAcmB,MAAd,CAAqBD,KAArB,EAA4B,CAA5B;AACAxB,IAAAA,WAAW,CAACK,QAAD,CAAX;AACAN,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GALD;;AAOA,MAAM4B,gBAAgB,GAAIH,KAAD,IAAmB;AAC1C,QAAI7B,KAAK,CAACW,IAAN,CAAWY,MAAX,IAAqB,CAAzB,EAA4B,OAAON,kBAAkB,EAAzB;AAC5B,WAAOb,SAAS,CAAC;AAAEN,MAAAA,IAAI,EAAE,KAAR;AAAeoB,MAAAA,QAAQ,EAAE,MAAMa,SAAS,CAACF,KAAD;AAAxC,KAAD,CAAhB;AACD,GAHD;;AAKA,MAAMI,mBAAmB,GAAIJ,KAAD,IAAmB;AAC7C,QAAI7B,KAAK,CAACW,IAAN,CAAW,CAAX,EAAcK,KAAd,CAAoBO,MAApB,IAA8B,CAAlC,EAAqC,OAAON,kBAAkB,EAAzB;AACrC,WAAOb,SAAS,CAAC;AAAEN,MAAAA,IAAI,EAAE,QAAR;AAAkBoB,MAAAA,QAAQ,EAAE,MAAMgB,YAAY,CAACL,KAAD;AAA9C,KAAD,CAAhB;AACD,GAHD;;AAKA,MAAMM,UAAU,GAAId,KAAD,IAAmB;AACpC,QAAMX,QAAQ,GAAGnB,SAAS,CAACS,KAAD,CAA1B,CADoC,CAEpC;;AACAU,IAAAA,QAAQ,CAACC,IAAT,CAAcyB,OAAd,CAAsB,CAACC,CAAD,EAAIb,CAAJ,KAAU;AAC9B,WAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjB,KAApB,EAA2BiB,CAAC,EAA5B,EAAgC;AAC9B5B,QAAAA,QAAQ,CAACC,IAAT,CAAca,CAAd,EAAiBR,KAAjB,CAAuBS,IAAvB,CAA4B,EAA5B;AACD;AACF,KAJD;AAKA,WAAOpB,WAAW,CAACK,QAAD,CAAlB;AACD,GATD;;AAWA,MAAM6B,WAAW,GAAIV,KAAD,IAAmB;AACrC,QAAMnB,QAAQ,GAAGnB,SAAS,CAACS,KAAD,CAA1B;AAEAU,IAAAA,QAAQ,CAACC,IAAT,CAAcyB,OAAd,CAAsB,CAACC,CAAD,EAAIb,CAAJ,KAAU;AAC9Bd,MAAAA,QAAQ,CAACC,IAAT,CAAca,CAAd,EAAiBR,KAAjB,CAAuBc,MAAvB,CAA8BD,KAA9B,EAAqC,CAArC,EAAwC,EAAxC;AACD,KAFD;AAIA,WAAOxB,WAAW,CAACK,QAAD,CAAlB;AACD,GARD;;AAUA,MAAMwB,YAAY,GAAIL,KAAD,IAAW;AAC9B,QAAMnB,QAAQ,GAAGnB,SAAS,CAACS,KAAD,CAA1B;AACAU,IAAAA,QAAQ,CAACC,IAAT,CAAcyB,OAAd,CAAuBI,GAAD,IAAS;AAC7BA,MAAAA,GAAG,CAACxB,KAAJ,CAAUc,MAAV,CAAiBD,KAAjB,EAAwB,CAAxB;AACD,KAFD;AAGAxB,IAAAA,WAAW,CAACK,QAAD,CAAX;AACAN,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAPD;;AASA,MAAMqC,UAAU,GAAG,CAACC,CAAD,EAAIC,QAAJ,EAAcC,SAAd,KAA4B;AAC7C,QAAMlC,QAAQ,GAAGnB,SAAS,CAACS,KAAD,CAA1B;AACAU,IAAAA,QAAQ,CAACC,IAAT,CAAcgC,QAAd,EAAwB3B,KAAxB,CAA8B4B,SAA9B,IAA2CF,CAAC,CAACG,MAAF,CAAS7C,KAApD;AACA,WAAOK,WAAW,CAACK,QAAD,CAAlB;AACD,GAJD;;AAMA,sBACE,0CACGP,MAAM,iBACL,6BAAC,UAAD;AACE,IAAA,MAAM,mBAAYA,MAAM,CAACL,IAAnB,CADR;AAEE,IAAA,EAAE,EAAC,eAFL;AAGE,IAAA,OAAO,EAAE,MAAMM,SAAS,CAAC,IAAD,CAH1B;AAIE,IAAA,OAAO,EAAE;AAJX,kBAME,6BAAC,QAAD;AAAM,IAAA,OAAO,EAAE;AAAf,kBACE,6BAAC,QAAD,iDAA4CD,MAAM,CAACL,IAAnD,MADF,eAEE,6BAAC,OAAD;AAAK,IAAA,SAAS,EAAE;AAAhB,kBACE,6BAAC,UAAD;AAAQ,IAAA,KAAK,EAAE,CAAf;AAAkB,IAAA,KAAK,EAAE;AAAEgD,MAAAA,SAAS,EAAE;AAAb;AAAzB,kBACE,6BAAC,UAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,OAAO,EAAE,MAAM1C,SAAS,CAAC,IAAD;AAH1B,IADF,eAME,6BAAC,UAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,OAAO,EAAE,MAAMD,MAAM,CAACe,QAAP;AAHjB,IANF,CADF,CAFF,CANF,CAFJ,eA2BE,6BAAC,QAAD;AAAM,IAAA,KAAK,EAAC,YAAZ;AAAyB,IAAA,OAAO,EAAC;AAAjC,kBACE,6BAAC,iBAAD;AACE,IAAA,KAAK,EAAEpB,IAAI,CAACiD,KADd;AAEE,IAAA,OAAO,EAAE9C,OAFX;AAGE,IAAA,WAAW,EAAEH,IAAI,CAACkD,WAHpB;AAIE,IAAA,KAAK,EAAEjD,KAJT;AAKE,IAAA,0BAA0B,EAAE;AAL9B,IADF,EAQG,CAAAC,KAAK,SAAL,IAAAA,KAAK,WAAL,2BAAAA,KAAK,CAAEW,IAAP,4DAAaY,MAAb,kBACC,6BAAC,kBAAD;AACE,IAAA,UAAU,EAAEY,UADd;AAEE,IAAA,WAAW,EAAEI,WAFf;AAGE,IAAA,OAAO,EAAEnB,OAHX;AAIE,IAAA,QAAQ,EAAEQ,QAJZ;AAKE,IAAA,MAAM,EAAEX,kBALV;AAME,IAAA,SAAS,EAAC;AANZ,IATJ,CA3BF,EA8CG,CAAAjB,KAAK,SAAL,IAAAA,KAAK,WAAL,4BAAAA,KAAK,CAAEW,IAAP,8DAAaY,MAAb,kBAAuB,6BAAC,mBAAD;AACtB,IAAA,IAAI,EAAEvB,KAAK,CAACW,IADU;AAEtB,IAAA,SAAS,EAAEqB,gBAFW;AAGtB,IAAA,YAAY,EAAEC,mBAHQ;AAItB,IAAA,UAAU,EAAEQ;AAJU,IA9C1B,EAoDG,CAAC,CAACzC,KAAD,IAAU,EAACA,KAAD,aAACA,KAAD,+BAACA,KAAK,CAAEW,IAAR,yCAAC,aAAaY,MAAd,CAAX,kBACC,6BAAC,qBAAD;AAAc,IAAA,MAAM,EAAEd;AAAtB,IArDJ,CADF;AA0DD,CAtLD;;4BAwLe,uBAAW,CAACZ,KAAD,EAAmBoD,GAAnB,kBACxB,6BAAC,cAAD,EAAoBpD,KAApB,CADa,C","sourcesContent":["import React, { useState, FunctionComponent, forwardRef } from 'react';\nimport { uuid } from '@sanity/uuid';\nimport FormField from 'part:@sanity/components/formfields/default';\nimport PatchEvent, { set, unset } from 'part:@sanity/form-builder/patch-event';\nimport config from 'config:table';\nimport TableControl from './components/TableControl';\nimport TableInput from './components/TableInput';\nimport TableMenu from './components/TableMenu';\nimport { Box, Button, Card, Dialog, Flex, Inline, Text } from '@sanity/ui';\n\n// This probably isn't necessary anymore\nfunction deepClone<T>(obj: T): T {\n  return JSON.parse(JSON.stringify(obj));\n}\n\nconst TableComponent: FunctionComponent<RootProps> = (props) => {\n  const { type, level, value, markers, onChange } = props;\n  const [dialog, setDialog] = useState<{\n    type: string;\n    callback: () => any;\n  } | null>(null);\n\n  const updateValue = (value) => {\n    return onChange(PatchEvent.from(set(value)));\n  };\n\n  const resetValue = () => {\n    return onChange(PatchEvent.from(unset()));\n  };\n\n  const createTable = () => {\n    const newValue = {\n      rows: [\n        {\n          _type: config.rowType,\n          _key: uuid(),\n          cells: ['', ''],\n        },\n        {\n          _type: config.rowType,\n          _key: uuid(),\n          cells: ['', ''],\n        },\n      ],\n    };\n    return updateValue({...(value || {}), ...newValue });\n  };\n\n  const confirmRemoveTable = () => {\n    setDialog({ type: 'table', callback: removeTable });\n  };\n\n  const removeTable = () => {\n    resetValue();\n    setDialog(null);\n  };\n\n  const addRows = (count: number = 1) => {\n    const newValue = { ...value };\n    // Calculate the column count from the first row\n    const columnCount = value.rows[0].cells.length;\n    for (let i = 0; i < count; i++) {\n      // Add as many cells as we have columns\n      newValue.rows.push({\n        _type: config.rowType,\n        _key: uuid(),\n        cells: Array(columnCount).fill(''),\n      });\n    }\n    return updateValue(newValue);\n  };\n\n  const addRowAt = (index: number = 0) => {\n    const newValue = { ...value };\n    // Calculate the column count from the first row\n    const columnCount = value.rows[0].cells.length;\n\n    newValue.rows.splice(index, 0, {\n      _type: config.rowType,\n      _key: uuid(),\n      cells: Array(columnCount).fill(''),\n    })\n\n    return updateValue(newValue);\n  };\n\n  const removeRow = (index: number) => {\n    const newValue = deepClone(value);\n    newValue.rows.splice(index, 1);\n    updateValue(newValue);\n    setDialog(null);\n  };\n\n  const confirmRemoveRow = (index: number) => {\n    if (value.rows.length <= 1) return confirmRemoveTable();\n    return setDialog({ type: 'row', callback: () => removeRow(index) });\n  };\n\n  const confirmRemoveColumn = (index: number) => {\n    if (value.rows[0].cells.length <= 1) return confirmRemoveTable();\n    return setDialog({ type: 'column', callback: () => removeColumn(index) });\n  };\n\n  const addColumns = (count: number) => {\n    const newValue = deepClone(value);\n    // Add a cell to each of the rows\n    newValue.rows.forEach((_, i) => {\n      for (let j = 0; j < count; j++) {\n        newValue.rows[i].cells.push('');\n      }\n    });\n    return updateValue(newValue);\n  };\n\n  const addColumnAt = (index: number) => {\n    const newValue = deepClone(value);\n\n    newValue.rows.forEach((_, i) => {\n      newValue.rows[i].cells.splice(index, 0, '')\n    });\n\n    return updateValue(newValue);\n  };\n\n  const removeColumn = (index) => {\n    const newValue = deepClone(value);\n    newValue.rows.forEach((row) => {\n      row.cells.splice(index, 1);\n    });\n    updateValue(newValue);\n    setDialog(null);\n  };\n\n  const updateCell = (e, rowIndex, cellIndex) => {\n    const newValue = deepClone(value);\n    newValue.rows[rowIndex].cells[cellIndex] = e.target.value;\n    return updateValue(newValue);\n  };\n\n  return (\n    <div>\n      {dialog && (\n        <Dialog\n          header={`Remove ${dialog.type}`}\n          id=\"dialog-remove\"\n          onClose={() => setDialog(null)}\n          zOffset={1000}\n        >\n          <Card padding={4}>\n            <Text>Are you sure you want to remove this {dialog.type}?</Text>\n            <Box marginTop={4}>\n              <Inline space={1} style={{ textAlign: 'right' }}>\n                <Button\n                  text=\"Cancel\"\n                  mode=\"ghost\"\n                  onClick={() => setDialog(null)}\n                />\n                <Button\n                  text=\"Confirm\"\n                  tone=\"critical\"\n                  onClick={() => dialog.callback()}\n                />\n              </Inline>\n            </Box>\n          </Card>\n        </Dialog>\n      )}\n      <Flex align=\"flex-start\" justify=\"space-between\">\n        <FormField\n          label={type.title}\n          markers={markers}\n          description={type.description}\n          level={level}\n          __unstable_changeIndicator={false}\n        />\n        {value?.rows?.length && (\n          <TableMenu\n            addColumns={addColumns}\n            addColumnAt={addColumnAt}\n            addRows={addRows}\n            addRowAt={addRowAt}\n            remove={confirmRemoveTable}\n            placement=\"left\"\n          />\n        )}\n      </Flex>\n      {value?.rows?.length && <TableInput\n        rows={value.rows}\n        removeRow={confirmRemoveRow}\n        removeColumn={confirmRemoveColumn}\n        updateCell={updateCell}\n      />}\n      {(!value || !value?.rows?.length) && (\n        <TableControl create={createTable} />\n      )}\n    </div>\n  );\n};\n\nexport default forwardRef((props: RootProps, ref) => (\n  <TableComponent {...props} />\n));\n"],"file":"TableComponent.js"}