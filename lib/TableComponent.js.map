{"version":3,"file":"TableComponent.js","names":["_react","_interopRequireWildcard","require","_uuid","_default2","_interopRequireDefault","_patchEvent","_configTable","_TableControl","_TableInput","_TableMenu","_ui","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","Array","from","test","len","arr2","_i","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","err","return","isArray","deepClone","JSON","parse","stringify","TableComponent","props","_value$rows","_value$rows2","_value$rows3","type","level","markers","onChange","_useState","useState","_useState2","dialog","setDialog","updateValue","PatchEvent","resetValue","unset","createTable","newValue","rows","_type","config","rowType","_key","uuid","cells","confirmRemoveTable","callback","removeTable","addRows","count","columnCount","fill","addRowAt","index","splice","removeRow","confirmRemoveRow","confirmRemoveColumn","removeColumn","addColumns","_","j","addColumnAt","row","updateCell","e","rowIndex","cellIndex","createElement","Dialog","header","concat","id","onClose","zOffset","Card","padding","Text","Box","marginTop","Inline","space","style","textAlign","Button","text","mode","onClick","tone","Flex","align","justify","label","title","description","__unstable_changeIndicator","remove","placement","create","_default","forwardRef","ref","exports"],"sources":["../src/TableComponent.tsx"],"sourcesContent":["import React, { useState, FunctionComponent, forwardRef } from 'react';\nimport { uuid } from '@sanity/uuid';\nimport FormField from 'part:@sanity/components/formfields/default';\nimport PatchEvent, { set, unset } from 'part:@sanity/form-builder/patch-event';\nimport config from 'config:table';\nimport TableControl from './components/TableControl';\nimport TableInput from './components/TableInput';\nimport TableMenu from './components/TableMenu';\nimport { Box, Button, Card, Dialog, Flex, Inline, Text } from '@sanity/ui';\n\n// This probably isn't necessary anymore\nfunction deepClone<T>(obj: T): T {\n  return JSON.parse(JSON.stringify(obj));\n}\n\nconst TableComponent: FunctionComponent<RootProps> = (props) => {\n  const { type, level, value, markers, onChange } = props;\n  const [dialog, setDialog] = useState<{\n    type: string;\n    callback: () => any;\n  } | null>(null);\n\n  const updateValue = (value) => {\n    return onChange(PatchEvent.from(set(value)));\n  };\n\n  const resetValue = () => {\n    return onChange(PatchEvent.from(unset()));\n  };\n\n  const createTable = () => {\n    const newValue = {\n      rows: [\n        {\n          _type: config.rowType,\n          _key: uuid(),\n          cells: ['', ''],\n        },\n        {\n          _type: config.rowType,\n          _key: uuid(),\n          cells: ['', ''],\n        },\n      ],\n    };\n    return updateValue({...(value || {}), ...newValue });\n  };\n\n  const confirmRemoveTable = () => {\n    setDialog({ type: 'table', callback: removeTable });\n  };\n\n  const removeTable = () => {\n    resetValue();\n    setDialog(null);\n  };\n\n  const addRows = (count: number = 1) => {\n    const newValue = { ...value };\n    // Calculate the column count from the first row\n    const columnCount = value.rows[0].cells.length;\n    for (let i = 0; i < count; i++) {\n      // Add as many cells as we have columns\n      newValue.rows.push({\n        _type: config.rowType,\n        _key: uuid(),\n        cells: Array(columnCount).fill(''),\n      });\n    }\n    return updateValue(newValue);\n  };\n\n  const addRowAt = (index: number = 0) => {\n    const newValue = { ...value };\n    // Calculate the column count from the first row\n    const columnCount = value.rows[0].cells.length;\n\n    newValue.rows.splice(index, 0, {\n      _type: config.rowType,\n      _key: uuid(),\n      cells: Array(columnCount).fill(''),\n    })\n\n    return updateValue(newValue);\n  };\n\n  const removeRow = (index: number) => {\n    const newValue = deepClone(value);\n    newValue.rows.splice(index, 1);\n    updateValue(newValue);\n    setDialog(null);\n  };\n\n  const confirmRemoveRow = (index: number) => {\n    if (value.rows.length <= 1) return confirmRemoveTable();\n    return setDialog({ type: 'row', callback: () => removeRow(index) });\n  };\n\n  const confirmRemoveColumn = (index: number) => {\n    if (value.rows[0].cells.length <= 1) return confirmRemoveTable();\n    return setDialog({ type: 'column', callback: () => removeColumn(index) });\n  };\n\n  const addColumns = (count: number) => {\n    const newValue = deepClone(value);\n    // Add a cell to each of the rows\n    newValue.rows.forEach((_, i) => {\n      for (let j = 0; j < count; j++) {\n        newValue.rows[i].cells.push('');\n      }\n    });\n    return updateValue(newValue);\n  };\n\n  const addColumnAt = (index: number) => {\n    const newValue = deepClone(value);\n\n    newValue.rows.forEach((_, i) => {\n      newValue.rows[i].cells.splice(index, 0, '')\n    });\n\n    return updateValue(newValue);\n  };\n\n  const removeColumn = (index) => {\n    const newValue = deepClone(value);\n    newValue.rows.forEach((row) => {\n      row.cells.splice(index, 1);\n    });\n    updateValue(newValue);\n    setDialog(null);\n  };\n\n  const updateCell = (e, rowIndex, cellIndex) => {\n    const newValue = deepClone(value);\n    newValue.rows[rowIndex].cells[cellIndex] = e.target.value;\n    return updateValue(newValue);\n  };\n\n  return (\n    <div>\n      {dialog && (\n        <Dialog\n          header={`Remove ${dialog.type}`}\n          id=\"dialog-remove\"\n          onClose={() => setDialog(null)}\n          zOffset={1000}\n        >\n          <Card padding={4}>\n            <Text>Are you sure you want to remove this {dialog.type}?</Text>\n            <Box marginTop={4}>\n              <Inline space={1} style={{ textAlign: 'right' }}>\n                <Button\n                  text=\"Cancel\"\n                  mode=\"ghost\"\n                  onClick={() => setDialog(null)}\n                />\n                <Button\n                  text=\"Confirm\"\n                  tone=\"critical\"\n                  onClick={() => dialog.callback()}\n                />\n              </Inline>\n            </Box>\n          </Card>\n        </Dialog>\n      )}\n      <Flex align=\"flex-start\" justify=\"space-between\">\n        <FormField\n          label={type.title}\n          markers={markers}\n          description={type.description}\n          level={level}\n          __unstable_changeIndicator={false}\n        />\n        {value?.rows?.length && (\n          <TableMenu\n            addColumns={addColumns}\n            addColumnAt={addColumnAt}\n            addRows={addRows}\n            addRowAt={addRowAt}\n            remove={confirmRemoveTable}\n            placement=\"left\"\n          />\n        )}\n      </Flex>\n      {value?.rows?.length && <TableInput\n        rows={value.rows}\n        removeRow={confirmRemoveRow}\n        removeColumn={confirmRemoveColumn}\n        updateCell={updateCell}\n      />}\n      {(!value || !value?.rows?.length) && (\n        <TableControl create={createTable} />\n      )}\n    </div>\n  );\n};\n\nexport default forwardRef((props: RootProps, ref) => (\n  <TableComponent {...props} />\n));\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,KAAA,GAAAD,OAAA;AACA,IAAAE,SAAA,GAAAC,sBAAA,CAAAH,OAAA;AACA,IAAAI,WAAA,GAAAL,uBAAA,CAAAC,OAAA;AACA,IAAAK,YAAA,GAAAF,sBAAA,CAAAH,OAAA;AACA,IAAAM,aAAA,GAAAH,sBAAA,CAAAH,OAAA;AACA,IAAAO,WAAA,GAAAJ,sBAAA,CAAAH,OAAA;AACA,IAAAQ,UAAA,GAAAL,sBAAA,CAAAH,OAAA;AACA,IAAAS,GAAA,GAAAT,OAAA;AAA2E,SAAAG,uBAAAO,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAAA,SAAAG,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,yBAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAf,wBAAAW,GAAA,EAAAI,WAAA,SAAAA,WAAA,IAAAJ,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAQ,KAAA,GAAAL,wBAAA,CAAAC,WAAA,OAAAI,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAT,GAAA,YAAAQ,KAAA,CAAAE,GAAA,CAAAV,GAAA,SAAAW,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAhB,GAAA,QAAAgB,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAnB,GAAA,EAAAgB,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAf,GAAA,EAAAgB,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAhB,GAAA,CAAAgB,GAAA,SAAAL,MAAA,CAAAT,OAAA,GAAAF,GAAA,MAAAQ,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAArB,GAAA,EAAAW,MAAA,YAAAA,MAAA;AAAA,SAAAW,QAAAC,MAAA,EAAAC,cAAA,QAAAC,IAAA,GAAAZ,MAAA,CAAAY,IAAA,CAAAF,MAAA,OAAAV,MAAA,CAAAa,qBAAA,QAAAC,OAAA,GAAAd,MAAA,CAAAa,qBAAA,CAAAH,MAAA,GAAAC,cAAA,KAAAG,OAAA,GAAAA,OAAA,CAAAC,MAAA,WAAAC,GAAA,WAAAhB,MAAA,CAAAE,wBAAA,CAAAQ,MAAA,EAAAM,GAAA,EAAAC,UAAA,OAAAL,IAAA,CAAAM,IAAA,CAAAC,KAAA,CAAAP,IAAA,EAAAE,OAAA,YAAAF,IAAA;AAAA,SAAAQ,cAAAC,MAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAF,CAAA,UAAAG,MAAA,WAAAF,SAAA,CAAAD,CAAA,IAAAC,SAAA,CAAAD,CAAA,QAAAA,CAAA,OAAAb,OAAA,CAAAT,MAAA,CAAAyB,MAAA,OAAAC,OAAA,WAAAvB,GAAA,IAAAwB,eAAA,CAAAN,MAAA,EAAAlB,GAAA,EAAAsB,MAAA,CAAAtB,GAAA,SAAAH,MAAA,CAAA4B,yBAAA,GAAA5B,MAAA,CAAA6B,gBAAA,CAAAR,MAAA,EAAArB,MAAA,CAAA4B,yBAAA,CAAAH,MAAA,KAAAhB,OAAA,CAAAT,MAAA,CAAAyB,MAAA,GAAAC,OAAA,WAAAvB,GAAA,IAAAH,MAAA,CAAAC,cAAA,CAAAoB,MAAA,EAAAlB,GAAA,EAAAH,MAAA,CAAAE,wBAAA,CAAAuB,MAAA,EAAAtB,GAAA,iBAAAkB,MAAA;AAAA,SAAAM,gBAAAxC,GAAA,EAAAgB,GAAA,EAAA2B,KAAA,IAAA3B,GAAA,GAAA4B,cAAA,CAAA5B,GAAA,OAAAA,GAAA,IAAAhB,GAAA,IAAAa,MAAA,CAAAC,cAAA,CAAAd,GAAA,EAAAgB,GAAA,IAAA2B,KAAA,EAAAA,KAAA,EAAAb,UAAA,QAAAe,YAAA,QAAAC,QAAA,oBAAA9C,GAAA,CAAAgB,GAAA,IAAA2B,KAAA,WAAA3C,GAAA;AAAA,SAAA4C,eAAAG,GAAA,QAAA/B,GAAA,GAAAgC,YAAA,CAAAD,GAAA,2BAAA/B,GAAA,gBAAAA,GAAA,GAAAiC,MAAA,CAAAjC,GAAA;AAAA,SAAAgC,aAAAE,KAAA,EAAAC,IAAA,eAAAD,KAAA,iBAAAA,KAAA,kBAAAA,KAAA,MAAAE,IAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,WAAA,OAAAF,IAAA,KAAAG,SAAA,QAAAC,GAAA,GAAAJ,IAAA,CAAAjC,IAAA,CAAA+B,KAAA,EAAAC,IAAA,2BAAAK,GAAA,sBAAAA,GAAA,YAAAC,SAAA,4DAAAN,IAAA,gBAAAF,MAAA,GAAAS,MAAA,EAAAR,KAAA;AAAA,SAAAS,eAAAC,GAAA,EAAAzB,CAAA,WAAA0B,eAAA,CAAAD,GAAA,KAAAE,qBAAA,CAAAF,GAAA,EAAAzB,CAAA,KAAA4B,2BAAA,CAAAH,GAAA,EAAAzB,CAAA,KAAA6B,gBAAA;AAAA,SAAAA,iBAAA,cAAAP,SAAA;AAAA,SAAAM,4BAAAE,CAAA,EAAAC,MAAA,SAAAD,CAAA,qBAAAA,CAAA,sBAAAE,iBAAA,CAAAF,CAAA,EAAAC,MAAA,OAAAE,CAAA,GAAAvD,MAAA,CAAAI,SAAA,CAAAoD,QAAA,CAAAlD,IAAA,CAAA8C,CAAA,EAAAK,KAAA,aAAAF,CAAA,iBAAAH,CAAA,CAAAM,WAAA,EAAAH,CAAA,GAAAH,CAAA,CAAAM,WAAA,CAAAC,IAAA,MAAAJ,CAAA,cAAAA,CAAA,mBAAAK,KAAA,CAAAC,IAAA,CAAAT,CAAA,OAAAG,CAAA,+DAAAO,IAAA,CAAAP,CAAA,UAAAD,iBAAA,CAAAF,CAAA,EAAAC,MAAA;AAAA,SAAAC,kBAAAP,GAAA,EAAAgB,GAAA,QAAAA,GAAA,YAAAA,GAAA,GAAAhB,GAAA,CAAAvB,MAAA,EAAAuC,GAAA,GAAAhB,GAAA,CAAAvB,MAAA,WAAAF,CAAA,MAAA0C,IAAA,OAAAJ,KAAA,CAAAG,GAAA,GAAAzC,CAAA,GAAAyC,GAAA,EAAAzC,CAAA,IAAA0C,IAAA,CAAA1C,CAAA,IAAAyB,GAAA,CAAAzB,CAAA,UAAA0C,IAAA;AAAA,SAAAf,sBAAAF,GAAA,EAAAzB,CAAA,QAAA2C,EAAA,WAAAlB,GAAA,gCAAAP,MAAA,IAAAO,GAAA,CAAAP,MAAA,CAAA0B,QAAA,KAAAnB,GAAA,4BAAAkB,EAAA,QAAAE,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,IAAA,OAAAC,EAAA,OAAAC,EAAA,iBAAAJ,EAAA,IAAAJ,EAAA,GAAAA,EAAA,CAAA3D,IAAA,CAAAyC,GAAA,GAAA2B,IAAA,QAAApD,CAAA,QAAAtB,MAAA,CAAAiE,EAAA,MAAAA,EAAA,UAAAO,EAAA,uBAAAA,EAAA,IAAAL,EAAA,GAAAE,EAAA,CAAA/D,IAAA,CAAA2D,EAAA,GAAAU,IAAA,MAAAJ,IAAA,CAAArD,IAAA,CAAAiD,EAAA,CAAArC,KAAA,GAAAyC,IAAA,CAAA/C,MAAA,KAAAF,CAAA,GAAAkD,EAAA,iBAAAI,GAAA,IAAAH,EAAA,OAAAL,EAAA,GAAAQ,GAAA,yBAAAJ,EAAA,YAAAP,EAAA,CAAAY,MAAA,KAAAP,EAAA,GAAAL,EAAA,CAAAY,MAAA,IAAA7E,MAAA,CAAAsE,EAAA,MAAAA,EAAA,2BAAAG,EAAA,QAAAL,EAAA,aAAAG,IAAA;AAAA,SAAAvB,gBAAAD,GAAA,QAAAa,KAAA,CAAAkB,OAAA,CAAA/B,GAAA,UAAAA,GAAA;AAE3E;AACA,SAASgC,SAASA,CAAI5F,GAAM,EAAK;EAC/B,OAAO6F,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAAC/F,GAAG,CAAC,CAAC;AACxC;AAEA,IAAMgG,cAA4C,GAAIC,KAAK,IAAK;EAAA,IAAAC,WAAA,EAAAC,YAAA,EAAAC,YAAA;EAC9D,IAAQC,IAAI,GAAsCJ,KAAK,CAA/CI,IAAI;IAAEC,KAAK,GAA+BL,KAAK,CAAzCK,KAAK;IAAE3D,KAAK,GAAwBsD,KAAK,CAAlCtD,KAAK;IAAE4D,OAAO,GAAeN,KAAK,CAA3BM,OAAO;IAAEC,QAAQ,GAAKP,KAAK,CAAlBO,QAAQ;EAC7C,IAAAC,SAAA,GAA4B,IAAAC,eAAQ,EAG1B,IAAI,CAAC;IAAAC,UAAA,GAAAhD,cAAA,CAAA8C,SAAA;IAHRG,MAAM,GAAAD,UAAA;IAAEE,SAAS,GAAAF,UAAA;EAKxB,IAAMG,WAAW,GAAInE,KAAK,IAAK;IAC7B,OAAO6D,QAAQ,CAACO,mBAAU,CAACrC,IAAI,CAAC,IAAArD,eAAG,EAACsB,KAAK,CAAC,CAAC,CAAC;EAC9C,CAAC;EAED,IAAMqE,UAAU,GAAGA,CAAA,KAAM;IACvB,OAAOR,QAAQ,CAACO,mBAAU,CAACrC,IAAI,CAAC,IAAAuC,iBAAK,GAAE,CAAC,CAAC;EAC3C,CAAC;EAED,IAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAMC,QAAQ,GAAG;MACfC,IAAI,EAAE,CACJ;QACEC,KAAK,EAAEC,oBAAM,CAACC,OAAO;QACrBC,IAAI,EAAE,IAAAC,UAAI,GAAE;QACZC,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE;MAChB,CAAC,EACD;QACEL,KAAK,EAAEC,oBAAM,CAACC,OAAO;QACrBC,IAAI,EAAE,IAAAC,UAAI,GAAE;QACZC,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE;MAChB,CAAC;IAEL,CAAC;IACD,OAAOZ,WAAW,CAAA7E,aAAA,CAAAA,aAAA,KAAMU,KAAK,IAAI,CAAC,CAAC,GAAMwE,QAAQ,EAAG;EACtD,CAAC;EAED,IAAMQ,kBAAkB,GAAGA,CAAA,KAAM;IAC/Bd,SAAS,CAAC;MAAER,IAAI,EAAE,OAAO;MAAEuB,QAAQ,EAAEC;IAAY,CAAC,CAAC;EACrD,CAAC;EAED,IAAMA,WAAW,GAAGA,CAAA,KAAM;IACxBb,UAAU,EAAE;IACZH,SAAS,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,IAAMiB,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAA0B;IAAA,IAAtBC,KAAa,GAAA3F,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAmB,SAAA,GAAAnB,SAAA,MAAG,CAAC;IAChC,IAAM+E,QAAQ,GAAAlF,aAAA,KAAQU,KAAK,CAAE;IAC7B;IACA,IAAMqF,WAAW,GAAGrF,KAAK,CAACyE,IAAI,CAAC,CAAC,CAAC,CAACM,KAAK,CAACrF,MAAM;IAC9C,KAAK,IAAIF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4F,KAAK,EAAE5F,CAAC,EAAE,EAAE;MAC9B;MACAgF,QAAQ,CAACC,IAAI,CAACrF,IAAI,CAAC;QACjBsF,KAAK,EAAEC,oBAAM,CAACC,OAAO;QACrBC,IAAI,EAAE,IAAAC,UAAI,GAAE;QACZC,KAAK,EAAEjD,KAAK,CAACuD,WAAW,CAAC,CAACC,IAAI,CAAC,EAAE;MACnC,CAAC,CAAC;IACJ;IACA,OAAOnB,WAAW,CAACK,QAAQ,CAAC;EAC9B,CAAC;EAED,IAAMe,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAA0B;IAAA,IAAtBC,KAAa,GAAA/F,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAmB,SAAA,GAAAnB,SAAA,MAAG,CAAC;IACjC,IAAM+E,QAAQ,GAAAlF,aAAA,KAAQU,KAAK,CAAE;IAC7B;IACA,IAAMqF,WAAW,GAAGrF,KAAK,CAACyE,IAAI,CAAC,CAAC,CAAC,CAACM,KAAK,CAACrF,MAAM;IAE9C8E,QAAQ,CAACC,IAAI,CAACgB,MAAM,CAACD,KAAK,EAAE,CAAC,EAAE;MAC7Bd,KAAK,EAAEC,oBAAM,CAACC,OAAO;MACrBC,IAAI,EAAE,IAAAC,UAAI,GAAE;MACZC,KAAK,EAAEjD,KAAK,CAACuD,WAAW,CAAC,CAACC,IAAI,CAAC,EAAE;IACnC,CAAC,CAAC;IAEF,OAAOnB,WAAW,CAACK,QAAQ,CAAC;EAC9B,CAAC;EAED,IAAMkB,SAAS,GAAIF,KAAa,IAAK;IACnC,IAAMhB,QAAQ,GAAGvB,SAAS,CAACjD,KAAK,CAAC;IACjCwE,QAAQ,CAACC,IAAI,CAACgB,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IAC9BrB,WAAW,CAACK,QAAQ,CAAC;IACrBN,SAAS,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,IAAMyB,gBAAgB,GAAIH,KAAa,IAAK;IAC1C,IAAIxF,KAAK,CAACyE,IAAI,CAAC/E,MAAM,IAAI,CAAC,EAAE,OAAOsF,kBAAkB,EAAE;IACvD,OAAOd,SAAS,CAAC;MAAER,IAAI,EAAE,KAAK;MAAEuB,QAAQ,EAAEA,CAAA,KAAMS,SAAS,CAACF,KAAK;IAAE,CAAC,CAAC;EACrE,CAAC;EAED,IAAMI,mBAAmB,GAAIJ,KAAa,IAAK;IAC7C,IAAIxF,KAAK,CAACyE,IAAI,CAAC,CAAC,CAAC,CAACM,KAAK,CAACrF,MAAM,IAAI,CAAC,EAAE,OAAOsF,kBAAkB,EAAE;IAChE,OAAOd,SAAS,CAAC;MAAER,IAAI,EAAE,QAAQ;MAAEuB,QAAQ,EAAEA,CAAA,KAAMY,YAAY,CAACL,KAAK;IAAE,CAAC,CAAC;EAC3E,CAAC;EAED,IAAMM,UAAU,GAAIV,KAAa,IAAK;IACpC,IAAMZ,QAAQ,GAAGvB,SAAS,CAACjD,KAAK,CAAC;IACjC;IACAwE,QAAQ,CAACC,IAAI,CAAC7E,OAAO,CAAC,CAACmG,CAAC,EAAEvG,CAAC,KAAK;MAC9B,KAAK,IAAIwG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,KAAK,EAAEY,CAAC,EAAE,EAAE;QAC9BxB,QAAQ,CAACC,IAAI,CAACjF,CAAC,CAAC,CAACuF,KAAK,CAAC3F,IAAI,CAAC,EAAE,CAAC;MACjC;IACF,CAAC,CAAC;IACF,OAAO+E,WAAW,CAACK,QAAQ,CAAC;EAC9B,CAAC;EAED,IAAMyB,WAAW,GAAIT,KAAa,IAAK;IACrC,IAAMhB,QAAQ,GAAGvB,SAAS,CAACjD,KAAK,CAAC;IAEjCwE,QAAQ,CAACC,IAAI,CAAC7E,OAAO,CAAC,CAACmG,CAAC,EAAEvG,CAAC,KAAK;MAC9BgF,QAAQ,CAACC,IAAI,CAACjF,CAAC,CAAC,CAACuF,KAAK,CAACU,MAAM,CAACD,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC;IAC7C,CAAC,CAAC;IAEF,OAAOrB,WAAW,CAACK,QAAQ,CAAC;EAC9B,CAAC;EAED,IAAMqB,YAAY,GAAIL,KAAK,IAAK;IAC9B,IAAMhB,QAAQ,GAAGvB,SAAS,CAACjD,KAAK,CAAC;IACjCwE,QAAQ,CAACC,IAAI,CAAC7E,OAAO,CAAEsG,GAAG,IAAK;MAC7BA,GAAG,CAACnB,KAAK,CAACU,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IAC5B,CAAC,CAAC;IACFrB,WAAW,CAACK,QAAQ,CAAC;IACrBN,SAAS,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,IAAMiC,UAAU,GAAGA,CAACC,CAAC,EAAEC,QAAQ,EAAEC,SAAS,KAAK;IAC7C,IAAM9B,QAAQ,GAAGvB,SAAS,CAACjD,KAAK,CAAC;IACjCwE,QAAQ,CAACC,IAAI,CAAC4B,QAAQ,CAAC,CAACtB,KAAK,CAACuB,SAAS,CAAC,GAAGF,CAAC,CAAC7G,MAAM,CAACS,KAAK;IACzD,OAAOmE,WAAW,CAACK,QAAQ,CAAC;EAC9B,CAAC;EAED,oBACE/H,MAAA,CAAAc,OAAA,CAAAgJ,aAAA,cACGtC,MAAM,iBACLxH,MAAA,CAAAc,OAAA,CAAAgJ,aAAA,CAACnJ,GAAA,CAAAoJ,MAAM;IACLC,MAAM,YAAAC,MAAA,CAAYzC,MAAM,CAACP,IAAI,CAAG;IAChCiD,EAAE,EAAC,eAAe;IAClBC,OAAO,EAAEA,CAAA,KAAM1C,SAAS,CAAC,IAAI,CAAE;IAC/B2C,OAAO,EAAE;EAAK,gBAEdpK,MAAA,CAAAc,OAAA,CAAAgJ,aAAA,CAACnJ,GAAA,CAAA0J,IAAI;IAACC,OAAO,EAAE;EAAE,gBACftK,MAAA,CAAAc,OAAA,CAAAgJ,aAAA,CAACnJ,GAAA,CAAA4J,IAAI,QAAC,uCAAqC,EAAC/C,MAAM,CAACP,IAAI,EAAC,GAAC,CAAO,eAChEjH,MAAA,CAAAc,OAAA,CAAAgJ,aAAA,CAACnJ,GAAA,CAAA6J,GAAG;IAACC,SAAS,EAAE;EAAE,gBAChBzK,MAAA,CAAAc,OAAA,CAAAgJ,aAAA,CAACnJ,GAAA,CAAA+J,MAAM;IAACC,KAAK,EAAE,CAAE;IAACC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAQ;EAAE,gBAC9C7K,MAAA,CAAAc,OAAA,CAAAgJ,aAAA,CAACnJ,GAAA,CAAAmK,MAAM;IACLC,IAAI,EAAC,QAAQ;IACbC,IAAI,EAAC,OAAO;IACZC,OAAO,EAAEA,CAAA,KAAMxD,SAAS,CAAC,IAAI;EAAE,EAC/B,eACFzH,MAAA,CAAAc,OAAA,CAAAgJ,aAAA,CAACnJ,GAAA,CAAAmK,MAAM;IACLC,IAAI,EAAC,SAAS;IACdG,IAAI,EAAC,UAAU;IACfD,OAAO,EAAEA,CAAA,KAAMzD,MAAM,CAACgB,QAAQ;EAAG,EACjC,CACK,CACL,CACD,CAEV,eACDxI,MAAA,CAAAc,OAAA,CAAAgJ,aAAA,CAACnJ,GAAA,CAAAwK,IAAI;IAACC,KAAK,EAAC,YAAY;IAACC,OAAO,EAAC;EAAe,gBAC9CrL,MAAA,CAAAc,OAAA,CAAAgJ,aAAA,CAAC1J,SAAA,CAAAU,OAAS;IACRwK,KAAK,EAAErE,IAAI,CAACsE,KAAM;IAClBpE,OAAO,EAAEA,OAAQ;IACjBqE,WAAW,EAAEvE,IAAI,CAACuE,WAAY;IAC9BtE,KAAK,EAAEA,KAAM;IACbuE,0BAA0B,EAAE;EAAM,EAClC,EACD,CAAAlI,KAAK,aAALA,KAAK,wBAAAuD,WAAA,GAALvD,KAAK,CAAEyE,IAAI,cAAAlB,WAAA,uBAAXA,WAAA,CAAa7D,MAAM,kBAClBjD,MAAA,CAAAc,OAAA,CAAAgJ,aAAA,CAACpJ,UAAA,CAAAI,OAAS;IACRuI,UAAU,EAAEA,UAAW;IACvBG,WAAW,EAAEA,WAAY;IACzBd,OAAO,EAAEA,OAAQ;IACjBI,QAAQ,EAAEA,QAAS;IACnB4C,MAAM,EAAEnD,kBAAmB;IAC3BoD,SAAS,EAAC;EAAM,EAEnB,CACI,EACN,CAAApI,KAAK,aAALA,KAAK,wBAAAwD,YAAA,GAALxD,KAAK,CAAEyE,IAAI,cAAAjB,YAAA,uBAAXA,YAAA,CAAa9D,MAAM,kBAAIjD,MAAA,CAAAc,OAAA,CAAAgJ,aAAA,CAACrJ,WAAA,CAAAK,OAAU;IACjCkH,IAAI,EAAEzE,KAAK,CAACyE,IAAK;IACjBiB,SAAS,EAAEC,gBAAiB;IAC5BE,YAAY,EAAED,mBAAoB;IAClCO,UAAU,EAAEA;EAAW,EACvB,EACD,CAAC,CAACnG,KAAK,IAAI,EAACA,KAAK,aAALA,KAAK,gBAAAyD,YAAA,GAALzD,KAAK,CAAEyE,IAAI,cAAAhB,YAAA,eAAXA,YAAA,CAAa/D,MAAM,mBAC9BjD,MAAA,CAAAc,OAAA,CAAAgJ,aAAA,CAACtJ,aAAA,CAAAM,OAAY;IAAC8K,MAAM,EAAE9D;EAAY,EACnC,CACG;AAEV,CAAC;AAAC,IAAA+D,QAAA,gBAEa,IAAAC,iBAAU,EAAC,CAACjF,KAAgB,EAAEkF,GAAG,kBAC9C/L,MAAA,CAAAc,OAAA,CAAAgJ,aAAA,CAAClD,cAAc,EAAKC,KAAK,CAC1B,CAAC;AAAAmF,OAAA,CAAAlL,OAAA,GAAA+K,QAAA"}