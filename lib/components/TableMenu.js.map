{"version":3,"file":"TableMenu.js","names":["_react","_interopRequireWildcard","require","_ui","_icons","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","return","isArray","TableMenu","props","_useState","useState","_useState2","dialog","setDialog","_useState3","_useState4","count","setCount","updateCount","e","currentTarget","addRows","type","callback","addRowAt","index","addColumns","addColumnsAt","addColumnAt","onConfirm","parsedCount","parseInt","undefined","createElement","Fragment","Dialog","header","concat","id","onClose","zOffset","Card","padding","TextInput","style","textAlign","fontSize","onChange","Box","marginTop","Inline","space","Button","text","mode","onClick","tone","MenuButton","button","icon","ControlsIcon","menu","Menu","MenuItem","AddIcon","MenuDivider","WarningOutlineIcon","remove","placement","_default","exports"],"sources":["../../src/components/TableMenu.tsx"],"sourcesContent":["import React, { FunctionComponent, useState } from 'react';\nimport {\n  Box,\n  Button,\n  Card,\n  Dialog,\n  Inline,\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  TextInput,\n} from '@sanity/ui';\nimport { AddIcon, WarningOutlineIcon, ControlsIcon } from '@sanity/icons';\n\nconst TableMenu: FunctionComponent<{\n  addColumns: (count: number) => any;\n  addColumnAt: (index: number) => any;\n  addRows: (count: number) => any;\n  addRowAt: (index: number) => any;\n  remove: () => any;\n  placement: 'top' | 'bottom' | 'left' | 'right' | 'auto';\n}> = (props) => {\n  const [dialog, setDialog] = useState<{\n    type: string;\n    callback: (count: number) => any;\n  } | null>(null);\n\n  const [count, setCount] = useState('');\n\n  const updateCount = (e) => {\n    setCount(e.currentTarget.value);\n  }\n\n  const addRows = () => {\n    setDialog({ type: 'rows', callback: (count) => props.addRows(count) });\n  };\n\n  const addRowAt = () => {\n    setDialog({ type: 'rows', callback: (index) => props.addRowAt(index) });\n  };\n\n  const addColumns = () => {\n    setDialog({\n      type: 'columns',\n      callback: (count) => props.addColumns(count),\n    });\n  };\n\n  const addColumnsAt = () => {\n    setDialog({ type: 'columns', callback: (index) => props.addColumnAt(index) });\n  };\n\n  const onConfirm = () => {\n    const parsedCount = parseInt(count, 10);\n\n    if (parsedCount < 100) {\n      setDialog(null);\n      dialog.callback(parsedCount);\n      setCount(undefined);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {dialog && (\n        <Dialog\n          header={`Add ${dialog.type}`}\n          id=\"dialog-add\"\n          onClose={() => setDialog(null)}\n          zOffset={1000}\n        >\n          <Card padding={4}>\n            <TextInput\n              style={{ textAlign: 'left' }}\n              fontSize={2}\n              padding={3}\n              type=\"number\"\n              value={count}\n              onChange={updateCount}\n            />\n            <Box marginTop={4}>\n              <Inline space={1} style={{ textAlign: 'right' }}>\n                <Button\n                  text=\"Cancel\"\n                  mode=\"ghost\"\n                  onClick={() => setDialog(null)}\n                />\n                <Button text=\"Confirm\" tone=\"critical\" onClick={onConfirm} />\n              </Inline>\n            </Box>\n          </Card>\n        </Dialog>\n      )}\n      <MenuButton\n        button={\n          <Button icon={ControlsIcon} fontSize={1} padding={2} mode=\"ghost\" />\n        }\n        id=\"menu-button-example\"\n        menu={\n          <Menu>\n            <MenuItem\n              icon={AddIcon}\n              fontSize={1}\n              text=\"Add Row(s)\"\n              onClick={addRows}\n            />\n            <MenuItem\n              icon={AddIcon}\n              fontSize={1}\n              text=\"Add Row At Index\"\n              onClick={addRowAt}\n            />\n            <MenuItem\n              icon={AddIcon}\n              fontSize={1}\n              text=\"Add Column(s)\"\n              onClick={addColumns}\n            />\n            <MenuItem\n              icon={AddIcon}\n              fontSize={1}\n              text=\"Add Column At Index\"\n              onClick={addColumnsAt}\n            />\n            <MenuDivider />\n            <MenuItem\n              icon={WarningOutlineIcon}\n              fontSize={1}\n              text=\"Remove\"\n              tone=\"critical\"\n              onClick={props.remove}\n            />\n          </Menu>\n        }\n        placement={props.placement}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default TableMenu;\n"],"mappings":"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"}